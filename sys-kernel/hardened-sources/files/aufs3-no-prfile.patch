diff -rupN orig-3.13.1-hardened-r999/include/linux/mm.h linux-3.13.1-hardened-r999/include/linux/mm.h
--- orig-3.13.1-hardened-r999/include/linux/mm.h        2014-02-05 18:01:14.173646602 -0800
+++ linux-3.13.1-hardened-r999/include/linux/mm.h       2014-02-05 18:09:45.515653302 -0800
@@ -17,6 +17,9 @@
 #include <linux/pfn.h>
 #include <linux/bit_spinlock.h>
 #include <linux/shrinker.h>
+#include <linux/dcache.h>
+#include <linux/file.h>
+#include <linux/fs.h>

 struct mempolicy;
 struct anon_vma;
@@ -1128,7 +1131,7 @@ static inline void aufs_trace(struct fil
 static inline struct file *vmr_do_pr_or_file(struct vm_region *region,
                                             const char func[], int line)
 {
-       struct file *f = region->vm_file, *pr = region->vm_prfile;
+       struct file *f = region->vm_file, *pr = NULL;
        aufs_trace(f, pr, func, line, __func__);
        return (f && pr) ? pr : f;
 }
@@ -1136,7 +1139,7 @@ static inline struct file *vmr_do_pr_or_
 static inline void vmr_do_fput(struct vm_region *region,
                               const char func[], int line)
 {
-       struct file *f = region->vm_file, *pr = region->vm_prfile;
+       struct file *f = region->vm_file, *pr = NULL;
        aufs_trace(f, pr, func, line, __func__);
        fput(f);
        if (f && pr)
@@ -1146,7 +1149,7 @@ static inline void vmr_do_fput(struct vm
 static inline void vma_do_file_update_time(struct vm_area_struct *vma,
                                           const char func[], int line)
 {
-       struct file *f = vma->vm_file, *pr = vma->vm_prfile;
+       struct file *f = vma->vm_file, *pr = NULL;
        aufs_trace(f, pr, func, line, __func__);
        file_update_time(f);
        if (f && pr)
@@ -1156,7 +1159,7 @@ static inline void vma_do_file_update_ti
 static inline struct file *vma_do_pr_or_file(struct vm_area_struct *vma,
                                             const char func[], int line)
 {
-       struct file *f = vma->vm_file, *pr = vma->vm_prfile;
+       struct file *f = vma->vm_file, *pr = NULL;
        aufs_trace(f, pr, func, line, __func__);
        return (f && pr) ? pr : f;
 }
@@ -1164,7 +1167,7 @@ static inline struct file *vma_do_pr_or_
 static inline void vma_do_get_file(struct vm_area_struct *vma,
                                   const char func[], int line)
 {
-       struct file *f = vma->vm_file, *pr = vma->vm_prfile;
+       struct file *f = vma->vm_file, *pr = NULL;
        aufs_trace(f, pr, func, line, __func__);
        get_file(f);
        if (f && pr)
@@ -1174,7 +1177,7 @@ static inline void vma_do_get_file(struc
 static inline void vma_do_fput(struct vm_area_struct *vma,
                               const char func[], int line)
 {
-       struct file *f = vma->vm_file, *pr = vma->vm_prfile;
+       struct file *f = vma->vm_file, *pr = NULL;
        aufs_trace(f, pr, func, line, __func__);
        fput(f);
        if (f && pr)

